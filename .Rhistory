nvalues[ii] <- mean(x)-mean(y)
}
hist(nvalues,breaks = 1000,probability = TRUE)
x <- rnorm(nsubj,0,sqrt(10))
y <- rnorm(nsubj,0,sqrt(15))
nvalues[ii] <- mean(x)-mean(y)
}
hist(nvalues,breaks = 150,probability = TRUE)
nsubj <- 1000
xy_sim <- 50000
nvalues <- vector("numeric", length=xy_sim)
for(ii in 1:xy_sim){
x <- rnorm(nsubj,0,sqrt(10))
y <- rnorm(nsubj,0,sqrt(15))
nvalues[ii] <- mean(x)-mean(y)
}
hist(nvalues,breaks = 150,probability = TRUE)
nsubj <- 20
xy_sim <- 50000
nvalues <- vector("numeric", length=xy_sim)
for(ii in 1:xy_sim){
x <- rnorm(nsubj,0,sqrt(10))
y <- rnorm(nsubj,0,sqrt(15))
nvalues[ii] <- mean(x)-mean(y)
}
hist(nvalues,breaks = 100,probability = TRUE)
nsubj <- 20
xy_sim <- 50000
nvalues <- vector("numeric", length=xy_sim)
for(ii in 1:xy_sim){
x <- rnorm(nsubj,0,sqrt(10))
y <- rnorm(nsubj,0,sqrt(15))
nvalues[ii] <- mean(x)-mean(y)
}
hist(nvalues,breaks = 100,probability = TRUE)
nsubj <- 100
xy_sim <- 50000
nvalues <- vector("numeric", length=xy_sim)
for(ii in 1:xy_sim){
x <- rnorm(nsubj,0,sqrt(10))
y <- rnorm(nsubj,0,sqrt(15))
nvalues[ii] <- mean(x)-mean(y)
}
hist(nvalues,breaks = 150,probability = TRUE)
nsubj <- 1000
xy_sim <- 50000
nvalues <- vector("numeric", length=xy_sim)
for(ii in 1:xy_sim){
x <- rnorm(nsubj,0,sqrt(10))
y <- rnorm(nsubj,0,sqrt(15))
nvalues[ii] <- mean(x)-mean(y)
}
hist(nvalues,breaks = 150,probability = TRUE)
#Q3
A <- rnorm(20, 98, 10)
B <- rnorm(20, 96, 10)
C <- rnorm(20, 100, 10)
m1 <- sum((A-mean(A))**2) + sum((B-mean(B))**2) + sum((C-mean(C))**2)
m2 <- sum((c(A,B,C)-mean(c(A,B,C)))**2)
Fscore <- ((m2-m1)/2)/(m1/57)
#Q3
A <- rnorm(20, 98, 10)
B <- rnorm(20, 96, 10)
C <- rnorm(20, 100, 10)
m1 <- sum((A-mean(A))**2) + sum((B-mean(B))**2) + sum((C-mean(C))**2)
m2 <- sum((c(A,B,C)-mean(c(A,B,C)))**2)
Fscore <- ((m2-m1)/2)/(m1/57)
dat <- data.frame(id,group=rep(LETTERS[1:3],each=20),score=c(A,B,C))
afex::aov_ez("id","score",data = dat,between = "group")
dat <- data.frame(id,group=rep(LETTERS[1:3],each=20),score=c(A,B,C))
afex::aov_ez("id","score",data = dat,between = "group")
#Q3
A <- rnorm(20, 98, 10)
B <- rnorm(20, 96, 10)
C <- rnorm(20, 100, 10)
m1 <- sum((A-mean(A))**2) + sum((B-mean(B))**2) + sum((C-mean(C))**2)
m2 <- sum((c(A,B,C)-mean(c(A,B,C)))**2)
Fscore <- ((m2-m1)/2)/(m1/57)
install("afex")
dat <- data.frame(id,group=rep(LETTERS[1:3],each=20),score=c(A,B,C))
afex::aov_ez("id","score",data = dat,between = "group")
#Q3
A <- rnorm(20, 98, 10)
B <- rnorm(20, 96, 10)
C <- rnorm(20, 100, 10)
m1 <- sum((A-mean(A))**2) + sum((B-mean(B))**2) + sum((C-mean(C))**2)
m2 <- sum((c(A,B,C)-mean(c(A,B,C)))**2)
Fscore <- ((m2-m1)/2)/(m1/57)
install("afex")
dat <- data.frame(id,group=rep(LETTERS[1:3],each=20),score=c(A,B,C))
afex::aov_ez("id","score",data = dat,between = "group")
density(ffr_out_put)
dir <- getwd()
target_dir <- "/Users/rebeccawilder/Desktop/CMR"
setwd(target_dir)
my_data <- read.csv(file= "R_data_02072021.csv")
my_data <- data.frame(my_data)
my_data
data_names <- c("subject", "session", "list", "rec_itemnos", "rt", "sp", "op", "lag", "ffr")
colnames(my_data) <- data_names
rt= my_data$rt
op= my_data$op
ffr= my_data$ffr
op<- op[1:length(rt)]
lag= my_data$lag
ffr_out_put= op[ffr==TRUE]
#plot hist for rt
hist(rt,breaks = 100,probability = TRUE, main= "Histogram of Response Times")
lines(
#plot hist for lag
hist(lag, breaks= 100, probability= TRUE, xlab= "N Intervening Items", main= "Intervening Items Between Presentation and IFR")
#plot hist for 'was it ffr?'
hist(ffr_out_put, breaks= 100, probability= TRUE, main= "IFR Output Positions That Were FFR", xlab= "Output")
density(ffr_out_put)
dir <- getwd()
target_dir <- "/Users/rebeccawilder/First-Year-Project"
setwd(target_dir)
dir <- getwd()
target_dir <- "/Users/rebeccawilder/First-Year-Project"
setwd(target_dir)
my_data <- read.csv(file= "R_data_02072021.csv")
my_data <- data.frame(my_data)
my_data
data_names <- c("subject", "session", "list", "rec_itemnos", "rt", "sp", "op", "lag", "ffr")
colnames(my_data) <- data_names
rt= my_data$rt
op= my_data$op
ffr= my_data$ffr
op<- op[1:length(rt)]
lag= my_data$lag
ffr_out_put= op[ffr==TRUE]
#plot hist for rt
hist(rt,breaks = 100,probability = TRUE, main= "Histogram of Response Times")
lines(
#plot hist for lag
hist(lag, breaks= 100, probability= TRUE, xlab= "N Intervening Items", main= "Intervening Items Between Presentation and IFR")
#plot hist for 'was it ffr?'
hist(ffr_out_put, breaks= 100, probability= TRUE, main= "IFR Output Positions That Were FFR", xlab= "Output")
density(ffr_out_put)
#plot hist for lag
hist(lag, breaks= 100, probability= TRUE, xlab= "N Intervening Items", main= "Intervening Items Between Presentation and IFR")
#plot hist for 'was it ffr?'
hist(ffr_out_put, breaks= 100, probability= TRUE, main= "IFR Output Positions That Were FFR", xlab= "Output")
density(ffr_out_put)
dir <- getwd()
target_dir <- "/Users/rebeccawilder/First-Year-Project"
setwd(target_dir)
my_data <- read.csv(file= "R_data_02072021.csv")
my_data <- data.frame(my_data)
my_data
data_names <- c("subject", "session", "list", "rec_itemnos", "rt", "sp", "op", "lag", "ffr")
colnames(my_data) <- data_names
rt= my_data$rt
op= my_data$op
ffr= my_data$ffr
op<- op[1:length(rt)]
lag= my_data$lag
ffr_output= op[ffr==TRUE]
#plot hist for rt
hist(rt,breaks = 100,probability = TRUE, main= "Histogram of Response Times")
#plot hist for lag
hist(lag, breaks= 100, probability= TRUE, xlab= "N Intervening Items", main= "Intervening Items Between Presentation and IFR")
#plot hist for 'was it ffr?'
hist(ffr_output, breaks= 100, probability= TRUE, main= "IFR Output Positions That Were FFR", xlab= "Output")
density(ffr_out_put)
ffr_output*ffr_dens
ffr_dens= density(ffr_out_put)
ffr_output*ffr_dens
ffr_output*ffr_dens$x
plot(ffr_output*ffr_dens$x)
plot(rnorm(ffr_output*ffr_dens$x))
length(ffr_output)
length(ffr_dens$x)
plot(rnorm(ffr_dens$x))
? dist
? normdist
ffr_dens= density(ffr_output)
dnorm(ffr_output)
dnorm(ffr_output, mean= 0, sd= 1, log= FALSE)
plot(dnorm(ffr_output, mean= 0, sd= 1, log= FALSE))
dnorm(ffr_output, mean= 0, sd= 1, log= FALSE)
ffr_dens= density(ffr_output)
quantiles(ffr_output)
plot(dnorm(ffr_output, mean= 0, sd= 1, log= FALSE))
ffr_dens= density(ffr_output)
quantiles(ffr_output)
plot(dnorm(ffr_output, mean= 0, sd= 1, log= FALSE))
quantiles(ffr_output)
quantile(ffr_output)
quantile(ffr_output);
quantile[2,]
quantile(ffr_output);
quantile[[1]]
result <- quantile(ffr_output);
result[2,]
result <- quantile(ffr_output);
result[[2]]
result <- quantile(ffr_output);
result[[]]
result <- quantile(ffr_output);
result[[,]]
result <- quantile(ffr_output);
result[[1:4]]
result <- quantile(ffr_output);
result[[1]]
result <- quantile(ffr_output);
result[[1:4]]
result <- quantile(ffr_output);
result[[1]:[4]]
result <- quantile(ffr_output, names= FALSE);
result
plot(dnorm(result, mean= 0, sd= 1, log= FALSE))
#plot hist for 'was it ffr?'
hist(ffr_output, density= 20 breaks= 100, probability= TRUE, main= "IFR Output Positions That Were FFR", xlab= "Output")
#plot hist for 'was it ffr?'
hist(ffr_output, density= 20, breaks= 100, probability= TRUE, main= "IFR Output Positions That Were FFR", xlab= "Output")
#plot hist for 'was it ffr?'
hist(ffr_output, density= 20, breaks= 100, probability= TRUE, main= "IFR Output Positions That Were FFR", xlab= "Output")
curve(dnorm(ffr_output, mean= mean(ffr_output), sd= sqrt(var(ffr_output))))
sqrt(var(ffr_output))
mean(ffr_output)
ffr_output
curve(dnorm(ffr_output, mean= mean(ffr_output), sd= sqrt(var(ffr_output))))
curve(dnorm(x, mean= mean(ffr_output), sd= sqrt(var(ffr_output))))
x
curve(dnorm(x, mean= mean(ffr_output), sd= sqrt(var(ffr_output))), lwd= 2, add= TRUE, yaxt= "n")
#plot hist for 'was it ffr?'
hist(ffr_output, density= 20, breaks= 100, probability= TRUE, main= "IFR Output Positions That Were FFR", xlab= "Output")
curve(dnorm(x, mean= mean(ffr_output), sd= sqrt(var(ffr_output))), lwd= 2, add= TRUE, yaxt= "n")
#plot hist for 'was it ffr?'
hist(ffr_output, density= 20, breaks= 100, probability= TRUE, main= "IFR Output Positions That Were FFR", xlab= "Output")
curve(dnorm(ffr_output, mean= mean(ffr_output), sd= sqrt(var(ffr_output))), lwd= 2, add= TRUE, yaxt= "n")
#plot hist for 'was it ffr?'
hist(ffr_output, density= 20, breaks= 100, probability= TRUE, main= "IFR Output Positions That Were FFR", xlab= "Output")
curve(dnorm(x, mean= mean(ffr_output), sd= sqrt(var(ffr_output))), lwd= 2, add= TRUE, yaxt= "n")
? curve
#plot hist for 'was it ffr?'
hist(ffr_output, density= 20, breaks= 100, probability= TRUE, main= "IFR Output Positions That Were FFR", xlab= "Output")
curve(dnorm(x, y, mean= mean(ffr_output), sd= sqrt(var(ffr_output))), lwd= 2, add= TRUE, yaxt= "n")
#plot hist for 'was it ffr?'
hist(ffr_output, density= 20, breaks= 100, probability= TRUE, main= "IFR Output Positions That Were FFR", xlab= "Output")
curve(dnorm(x, y, mean= mean(ffr_output), sd= sqrt(var(ffr_output))), lwd= 2, add= TRUE, yaxt= "n")
#plot hist for 'was it ffr?'
hist(ffr_output, density= 20, breaks= 100, probability= TRUE, main= "IFR Output Positions That Were FFR", xlab= "Output")
curve(dnorm(x, mean= mean(ffr_output), sd= sqrt(var(ffr_output))), lwd= 2, add= TRUE, yaxt= "n")
#plot hist for 'was it ffr?'
hist(ffr_output, density= 20, breaks= 100, probability= TRUE, normalcurve= TRUE, main= "IFR Output Positions That Were FFR", xlab= "Output")
#plot hist for 'was it ffr?'
hist(ffr_output, density= 20, breaks= 100, probability= TRUE, normalcurve= TRUE, main= "IFR Output Positions That Were FFR", xlab= "Output")
xfit= seq(min(ffr_output), max(ffr_output))
xfit
#plot hist for 'was it ffr?'
hist(ffr_output, density= 20, breaks= 100, probability= TRUE, main= "IFR Output Positions That Were FFR", xlab= "Output")
xfit= seq(min(ffr_output), max(ffr_output))
xfit
#plot hist for 'was it ffr?'
hist(ffr_output, density= 20, breaks= 100, probability= TRUE, main= "IFR Output Positions That Were FFR", xlab= "Output")
xfit= seq(min(ffr_output), max(ffr_output))
yfit= dnorm(xfit, mean= mean(ffr_output), sd= sd(ffr_output))
yfit
#plot hist for 'was it ffr?'
hist(ffr_output, density= 20, breaks= 100, probability= TRUE, main= "IFR Output Positions That Were FFR", xlab= "Output")
xfit= seq(min(ffr_output), max(ffr_output))
yfit= dnorm(xfit, mean= mean(ffr_output), sd= sd(ffr_output))
lines(xfit, yfit, col= "blue")
#plot hist for 'was it ffr?'
ffr_hist= hist(ffr_output, density= 20, breaks= 100, probability= TRUE, main= "IFR Output Positions That Were FFR", xlab= "Output")
xfit= seq(min(ffr_output), max(ffr_output))
yfit= dnorm(xfit, mean= mean(ffr_output), sd= sd(ffr_output))
yfit <- yfit *diff()
lines(xfit, yfit, col= "blue")
#plot hist for 'was it ffr?'
ffr_hist= hist(ffr_output, density= 20, breaks= 100, probability= TRUE, main= "IFR Output Positions That Were FFR", xlab= "Output")
xfit= seq(min(ffr_output), max(ffr_output))
yfit= dnorm(xfit, mean= mean(ffr_output), sd= sd(ffr_output))
yfit <- yfit *diff(ffr_hist$mids[1:2]*length(ffr_output))
lines(xfit, yfit, col= "blue")
yfit
#plot hist for 'was it ffr?'
ffr_hist= hist(ffr_output, density= 20, breaks= 100, probability= TRUE, main= "IFR Output Positions That Were FFR", xlab= "Output")
xfit= seq(min(ffr_output), max(ffr_output))
yfit= dnorm(xfit, mean= mean(ffr_output), sd= sd(ffr_output))
yfit <- yfit *diff(ffr_hist$mids[1:2]*length(ffr_output))
lines(xfit, yfit, col= "blue")
diff(ffr_hist$mids[1:2])
diff(ffr_hist$mids[1:2])*length(ffr_hist)
yfit
#plot hist for 'was it ffr?'
ffr_hist= hist(ffr_output, density= 20, breaks= 100, probability= TRUE, main= "IFR Output Positions That Were FFR", xlab= "Output")
xfit= seq(min(ffr_output), max(ffr_output))
yfit= dnorm(xfit, mean= mean(ffr_output), sd= sd(ffr_output))
#yfit <- yfit *diff(ffr_hist$mids[1:2]*length(ffr_output))
lines(xfit, yfit, col= "blue")
#Question 1
nsubj <- 20
xy_sim <- 5000 #originally xysim had a different value but I changed it since the outputs were off.
nvalues <- vector("numeric", length=xy_sim)
for(ii in 1:xy_sim){
x <- rnorm(nsubj,0,sqrt(10))
y <- rnorm(nsubj,0,sqrt(15))
nvalues[ii] <- mean(x)-mean(y)
}
(mean(nvalues))
(var(nvalues))
#Question 2: probability that delta is ≤ -1 U delta ≥ 1?
#My solution-- except that I just somehow did not think to use mean, rather sum/length... oops.  Still works.
p1= sum(abs(nvalues)>1)/length(nvalues)
p2= sum(abs(nvalues)>2)/length(nvalues)
(p1)
(p2)
#Your solution
p1= pnorm(-1, 0, sqrt(1.25))+(1-pnorm(1,0,sqrt(1.25)))
(p1)
p2= pnorm(-2,0,sqrt(1.25)) + (1-pnorm(2,0,sqrt(1.25)))
(p2)
#Question 3: Assume that design of Q1-2 was within-subjects, i.e. {x,y} obtained per individual. (Ok cool, I double checked, the package was mvtnorm)
install.packages("mvtnorm")
help(package= mvtnorm)
nsubj= 20;
nvalues= 5000
n_mu <- c(0,0)
n_sigma <- 0.5
n_cv <- sqrt(10*15)*n_sigma
n_cvmat <- matrix(c(10, n_cv, n_cv, 15), 2, 2, byrow= TRUE)
(n_cvmat)
for(ii in 1:nvalues){
w_output<- mvtnorm::rmvnorm(nsubj,mu,cvm)
nvalues[ii] <- mean(samp[,1]-samp[,2])
}
mean(nvalues)
var(nvalues)
mean(abs(nvalues)>1)
mean(abs(nvalues)>2)
((15+10-2*n_cv)/20)
#Exercise 2
#Q1
#(a) Generate norm dist with μ= 5 and σ^2= 10
#(b) Compute sample mean and sample var
#(c) Repeat the previous steps 100,000 times, saving the value of t obtained in each iteration in a single vector object.
## Saved var 't' as nvalues because 't' is a function in R
xy_sim <- 100000
nsubj <- 10
nvalues <- vector("numeric",length=xy_sim)
for(ii in 1:xy_sim){
x <- rnorm(nsubj,5,sqrt(10))
nvalues[ii] <- (mean(x)-5)/sqrt(var(x)/nsubj)
}
#Question 2: Indicate proportion of instances where 'nvalues' was as extreme as 1, 2, or 3
(ext_1= mean(abs(nvalues) > 1))
(ext_2= mean(abs(nvalues) > 2))
(ext_3= mean(abs(nvalues) > 3))
(z_values= quantile(nvalues,c(0.025,0.005)))
#quantiles match the ones obtained with t-distribution with df=9
(qt_025= qt(0.025,df = 9))
(qt_005= qt(0.005,df = 9))
#Q3
nsubj <- 20
xy_sim <- 50000
nvalues <- vector("numeric", length=xy_sim)
for(ii in 1:xy_sim){
x <- rnorm(nsubj,0,sqrt(10))
y <- rnorm(nsubj,0,sqrt(15))
nvalues[ii] <- mean(x)-mean(y)
}
hist(nvalues,breaks = 100,probability = TRUE)
nsubj <- 20
xy_sim <- 50000
nvalues <- vector("numeric", length=xy_sim)
for(ii in 1:xy_sim){
x <- rnorm(nsubj,0,sqrt(10))
y <- rnorm(nsubj,0,sqrt(15))
nvalues[ii] <- mean(x)-mean(y)
}
hist(nvalues,breaks = 100,probability = TRUE)
nsubj <- 100
xy_sim <- 50000
nvalues <- vector("numeric", length=xy_sim)
for(ii in 1:xy_sim){
x <- rnorm(nsubj,0,sqrt(10))
y <- rnorm(nsubj,0,sqrt(15))
nvalues[ii] <- mean(x)-mean(y)
}
hist(nvalues,breaks = 150,probability = TRUE)
nsubj <- 1000
xy_sim <- 50000
nvalues <- vector("numeric", length=xy_sim)
for(ii in 1:xy_sim){
x <- rnorm(nsubj,0,sqrt(10))
y <- rnorm(nsubj,0,sqrt(15))
nvalues[ii] <- mean(x)-mean(y)
}
hist(nvalues,breaks = 150,probability = TRUE)
#I had been using other variable names, but decided to change them to make edits less confusing
NN <- 20
nsim <- 50000
mdiff <- vector("numeric",length=nsim)
# set up mu vector and covariance matrix
mu <- c(0,0)
rr <- 0.5
cc <- sqrt(10*15)*rr
cvm <- matrix(c(10, cc, cc, 15),2,2, byrow=TRUE)
cvm <- matrix(c(10, cc, cc, 15),2,2, byrow=TRUE)
for(ii in 1:nsim){
samp <- mvtnorm::rmvnorm(NN,mu,cvm)
mdiff[ii] <- mean(samp[,1]-samp[,2])
}
mean(mdiff)
var(mdiff)
mean(abs(mdiff) > 1)
mean(abs(mdiff) > 2)
#Q5
set.seed(100)
x <- rnorm(20, 3,10)
tt <- mean(x)/sqrt(var(x)/20)
t.test(x)
#Exercise 3
#Q1
nsim <- 20000
FF <- vector("numeric",length=nsim)
for(jj in 1:nsim){
xa <- rnorm(50,100,sqrt(20))
xb <- rnorm(50,100,sqrt(20))
xc <- rnorm(50,100,sqrt(20))
i <- sum((xa-mean(xa))**2) + sum((xb-mean(xb))**2) +
sum((xc-mean(xc))**2)
ii <- sum((c(xa,xb,xc)-mean(c(xa,xb,xc)))**2)
FF[jj] <- ((ii-i)/2)/(i/147)
}
FF
#I wan't sure if we were supposed to preallocate these values, but it looks like that's what your answer key did!
quantile(FF, 1-c(0.05, 0.01, 0.005,0.001))
hist(FF,breaks = 100,probability = TRUE)
lines(seq(0,20,0.1),df(seq(0,20,0.1),2,147),col="red",lwd=2)
#hist(FF,breaks= 100, probability= TRUE)
#Q3
A <- rnorm(20, 98, 10)
B <- rnorm(20, 96, 10)
C <- rnorm(20, 100, 10)
m1 <- sum((A-mean(A))**2) + sum((B-mean(B))**2) + sum((C-mean(C))**2)
m2 <- sum((c(A,B,C)-mean(c(A,B,C)))**2)
Fscore <- ((m2-m1)/2)/(m1/57)
install("afex")
dat <- data.frame(id,group=rep(LETTERS[1:3],each=20),score=c(A,B,C))
afex::aov_ez("id","score",data = dat,between = "group")
FF
#I wan't sure if we were supposed to preallocate these values, but it looks like that's what your answer key did!
quantile(FF, 1-c(0.05, 0.01, 0.005,0.001))
hist(FF,breaks = 100,probability = TRUE)
lines(seq(0,20,0.1),df(seq(0,20,0.1),2,147),col="red",lwd=2)
#plot hist for lag
hist(lag, breaks= 100, probability= TRUE, xlab= "N Intervening Items", main= "Intervening Items Between Presentation and IFR")
lag
lag1= lag[ffr==TRUE]
lag2= lag[ffr==FALSE]
#plot hist for lag
hist(lag1, breaks= 100, probability= TRUE, xlab= "N Intervening Items", main= "Intervening Items Between Presentation and IFR")
lag1= lag[ffr==TRUE]
lag0= lag[ffr==FALSE]
#plot hist for lag
hist(lag1, breaks= 100, probability= TRUE, xlab= "N Intervening Items", main= "Intervening Items Between Presentation and IFR")
#plot hist for lag
hist(lag0, breaks= 100, probability= TRUE, xlab= "N Intervening Items", main= "Intervening Items Between Presentation and IFR")
#plot hist for lag
hist(lag1, breaks= 100, probability= TRUE, xlab= "N Intervening Items", main= "Intervening Items Between Presentation and IFR")
#plot hist for lag
hist(lag0, breaks= 100, probability= TRUE, xlab= "N Intervening Items", main= "Intervening Items Between Presentation and IFR")
lag
my_data <- read.csv(file= "R_data_02102021.csv")
my_data <- data.frame(my_data)
dir <- getwd()
target_dir <- "/Users/rebeccawilder/First-Year-Project"
setwd(target_dir)
my_data <- read.csv(file= "R_data_02102021.csv")
my_data <- data.frame(my_data)
my_data
data_names <- c("subject", "session", "list", "rec_itemnos", "rt", "sp", "op", "lag", "ffr")
colnames(my_data) <- data_names
rt= my_data$rt
op= my_data$op
ffr= my_data$ffr
op<- op[1:length(rt)]
lag= my_data$lag
ffr_output= op[ffr==TRUE]
#plot hist for rt
hist(rt,breaks = 100,probability = TRUE, main= "Histogram of Response Times")
lag1= lag[ffr==TRUE]
lag0= lag[ffr==FALSE]
#plot hist for lag
hist(lag0, breaks= 100, probability= TRUE, xlab= "N Intervening Items", main= "Intervening Items Between Presentation and IFR")
#plot hist for 'was it ffr?'
ffr_hist= hist(ffr_output, density= 20, breaks= 100, probability= TRUE, main= "IFR Output Positions That Were FFR", xlab= "Output")
#I've been trying to figure out how to do a frequency dist line over the histogram, but I gave up after spending too much time on it.
xfit= seq(min(ffr_output), max(ffr_output))
yfit= dnorm(xfit, mean= mean(ffr_output), sd= sd(ffr_output))
#yfit <- yfit *diff(ffr_hist$mids[1:2]*length(ffr_output))
lines(xfit, yfit, col= "blue")
lag= my_data$lag
ffr_output= op[ffr==TRUE]
#plot hist for rt
hist(rt,breaks = 100,probability = TRUE, main= "Histogram of Response Times")
lag1= lag[ffr==TRUE]
lag0= lag[ffr==FALSE]
#plot hist for lag
hist(lag0, breaks= 100, probability= TRUE, xlab= "N Intervening Items", main= "Intervening Items Between Presentation and IFR")
#plot hist for lag
hist(lag1, breaks= 100, probability= TRUE, xlab= "N Intervening Items", main= "Intervening Items Between Presentation and IFR")
#plot hist for lag
hist(lag, breaks= 100, probability= TRUE, xlab= "N Intervening Items", main= "Intervening Items Between Presentation and IFR")
#plot hist for lag
hist(lag, breaks= 100, probability= TRUE, xlab= "N Intervening Items", main= "Intervening Items Between Presentation and IFR")
#plot hist for lag
hist(lag1, breaks= 100, probability= TRUE, xlab= "N Intervening Items", main= "Intervening Items Between Presentation and IFR")
